package moneytransfer.database;

import java.sql.Connection;
import java.sql.SQLException;
import java.sql.Statement;  

public class DatabaseGenerator { 
	private static Connection conn = null;
    private static Statement stmt = null; 
    
   public static void create() { 
      
      try { 
    	 conn = DataSource.getInstance().getConnection();
         stmt = conn.createStatement();  
         String sql2 = "DROP TABLE IF EXISTS CUSTOMER ";
         stmt.executeUpdate(sql2);
         sql2 = "DROP TABLE IF EXISTS ACCOUNT  ";
         stmt.executeUpdate(sql2);
         sql2 = "DROP TABLE IF EXISTS TRANSACTION  ";
         stmt.executeUpdate(sql2);
         sql2 = "DROP TABLE IF EXISTS TRANSACTION_LOG  ";
         stmt.executeUpdate(sql2);
         sql2 = "DROP SEQUENCE IF EXISTS GROUP_SEQ  ";
         stmt.executeUpdate(sql2);
         
         String sql =  "CREATE TABLE IF NOT EXISTS CUSTOMER " + 
                 "(id BIGINT not NULL, " + 
                 " first_name VARCHAR(255), " +  
                 " last_name VARCHAR(255), " +  
                 " address TEXT, " +  
                 " PRIMARY KEY ( id ))";  
         stmt.executeUpdate(sql);
         sql =  "CREATE TABLE IF NOT EXISTS ACCOUNT " + 
                 "(id BIGINT not NULL," +
                 "customer_id INTEGER not NULL, " + 
                 " name VARCHAR(255) not NULL, " +
        		 " bank_id INTEGER not NULL, " +
                 " balance FLOAT not NULL, " +  
                 " debt_tolerance FLOAT not NULL," +
                 "PRIMARY KEY(id)) ";
         stmt.executeUpdate(sql);
         
         sql =  "CREATE TABLE IF NOT EXISTS TRANSACTION " + 
                 "(id BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL primary key," +
                 "sender INTEGER not NULL, " + 
                 "receiver INTEGER not NULL, " + 
                 "amount FLOAT not NULL, " +
                 "status INTEGER) ";
         stmt.executeUpdate(sql);
         
         sql =  "CREATE TABLE IF NOT EXISTS TRANSACTION_LOG " + 
                 "(id BIGINT not NULL," +
                 "sender INTEGER not NULL, " + 
                 "receiver INTEGER not NULL, " + 
                 "amount FLOAT not NULL," +
                 "completed BOOLEAN not NULL," +
                 "reject_reason VARCHAR(255) not NULL," +
                 "PRIMARY KEY(id)) ";
         stmt.executeUpdate(sql);
         sql = " ALTER TABLE ACCOUNT ADD FOREIGN KEY(customer_id) REFERENCES CUSTOMER(id)";
         stmt.executeUpdate(sql);
         conn.commit();
         conn.close();
         stmt.close();
      } catch(SQLException se) { 
         se.printStackTrace(); 
      } catch(Exception e) { 
         e.printStackTrace(); 
      } finally { 
          
         try{ 
            if(stmt!=null) stmt.close(); 
         } catch(SQLException se2) { 
         }
      } 
   } 
}